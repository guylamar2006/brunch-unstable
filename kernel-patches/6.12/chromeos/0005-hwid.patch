diff --git a/drivers/platform/chrome/chromeos_acpi.c b/drivers/platform/chrome/chromeos_acpi.c
index e6e6dcfc74d1..e31ef62a2609 100644
--- a/drivers/platform/chrome/chromeos_acpi.c
+++ b/drivers/platform/chrome/chromeos_acpi.c
@@ -15,6 +15,7 @@
 #include <linux/kernel.h>
 #include <linux/list.h>
 #include <linux/module.h>
+#include <linux/crc32.h>
 
 #define ACPI_ATTR_NAME_LEN 4
 
@@ -250,6 +251,44 @@ static const struct attribute_group *chromeos_acpi_all_groups[] = {
 	NULL
 };
 
+static char fakehwid[256] = "";
+
+static ssize_t fakehwid_show(struct device *dev, struct device_attribute *attr,
+			    char *buf)
+{
+	return sprintf(buf, "%s\n", fakehwid);
+}
+
+static ssize_t fakehwid_store(struct device *dev, struct device_attribute *attr,
+			     const char *buf, size_t count)
+{
+	static const char base8_alphabet[] = "23456789";
+	static const char base32_alphabet[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567";
+	char board[230];
+	char serial[256];
+	char crc[3];
+	u32 crc32_val;
+
+	if (count > 230)
+		return -EINVAL;
+
+	sscanf(buf, "%s", board);
+
+	snprintf(serial, sizeof(serial), "%s %s", board, "B2BB2BB2BB2BB2BB");
+
+	crc32_val = crc32(0 ^ 0xffffffff, serial, strlen(serial)) ^ 0xffffffff;
+
+	crc[0] = base8_alphabet[(crc32_val >> 5) & 0x7];
+	crc[1] = base32_alphabet[crc32_val & 0x1f];
+	crc[2] = '\0';
+
+	snprintf(fakehwid, sizeof(fakehwid), "%s %s%s", board, "B2B-B2B-B2B-B2B-B2B-B", crc);
+
+	return count;
+}
+
+static const DEVICE_ATTR(HWID, 0644, fakehwid_show, fakehwid_store);
+
 static int chromeos_acpi_device_probe(struct platform_device *pdev)
 {
 	chromeos_acpi_gpio_groups = get_gpio_pkg_num(&pdev->dev);
@@ -261,6 +300,9 @@ static int chromeos_acpi_device_probe(struct platform_device *pdev)
 	if (chromeos_acpi_gpio_groups > ARRAY_SIZE(chromeos_acpi_all_groups) - 2)
 		dev_warn(&pdev->dev, "Only %zu GPIO attr groups supported by the driver out of total %u.\n",
 			 ARRAY_SIZE(chromeos_acpi_all_groups) - 2, chromeos_acpi_gpio_groups);
+
+	device_create_file(&pdev->dev, &dev_attr_HWID);
+
 	return 0;
 }
 
